name: Deploy Textract

on:
  workflow_call:
    inputs:
      bucket_name:
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      LAMBDA_BUCKET: textract-lambda-code-bucket-2025
      SOURCE_BUCKET: textract-source-docs-2025
    steps:
      - uses: actions/checkout@v3
      
      # ...existing code for AWS credentials and stack check...

      - name: Package Lambda
        run: |
          mkdir -p build
          zip -j build/lambda_function.zip src/lambda_function.py

      - name: Upload Lambda
        run: |
          aws s3 cp build/lambda_function.zip s3://${LAMBDA_BUCKET}/lambda_function.zip

      - name: Deploy Stack
        run: |
          aws cloudformation deploy \
            --stack-name textract-stack \
            --template-file templates/textract.yaml \
            --capabilities CAPABILITY_NAMED_IAM

      - name: Setup S3 Trigger
        run: |
          # Get Lambda function ARN
          LAMBDA_ARN=$(aws lambda get-function --function-name TextractFunction --query 'Configuration.FunctionArn' --output text)
          
          # Add Lambda permission for S3
          aws lambda add-permission \
            --function-name TextractFunction \
            --statement-id S3TriggerPermission \
            --action lambda:InvokeFunction \
            --principal s3.amazonaws.com \
            --source-arn arn:aws:s3:::${SOURCE_BUCKET} \
            --source-account $(aws sts get-caller-identity --query Account --output text)

          # Configure S3 event notification
          aws s3api put-bucket-notification-configuration \
            --bucket ${SOURCE_BUCKET} \
            --notification-configuration "{\"LambdaFunctionConfigurations\":[{\"LambdaFunctionArn\":\"${LAMBDA_ARN}\",\"Events\":[\"s3:ObjectCreated:*\"]}]}"

      - name: Verify Trigger
        run: |
          # Verify notification configuration
          NOTIFICATION=$(aws s3api get-bucket-notification-configuration --bucket ${SOURCE_BUCKET})
          if [[ $NOTIFICATION != *"TextractFunction"* ]]; then
            echo "S3 trigger setup failed"
            exit 1
          fi
          echo "S3 trigger verified successfully"

      - name: Cleanup
        if: always()
        run: rm -rf build/